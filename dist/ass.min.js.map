{"version":3,"file":"ass.min.js","names":["hljs","ass"],"sources":["../src/languages/ass.js","../src/iife.js"],"sourcesContent":["/*\nLanguage: Advanced SubStation Alpha\nAuthor: GrygrFlzr <git@cybeast.dev>\nCategory: subtitle\nWebsite: https://github.com/libass/libass\n*/\n\n/**\n * @typedef {import('highlight.js').Mode} Mode\n */\n\n/** @type {import('highlight.js').LanguageFn} */\nexport default function (hljs) {\n  const regex = hljs.regex;\n  const INTEGERS = regex.either(\n    ...[\n      // integer\n      /-?\\d+/,\n      // scientific integer\n      /-?\\d*[Ee]\\d*/,\n    ]\n  );\n  const DECIMALS = regex.either(\n    ...[\n      // float\n      /-?\\d*\\.\\d+/, // e.g.  .4\n      /-?\\d+\\.\\d*/, // e.g. 4.\n      // scientific float - no decimal after E\n      /-?\\d*\\.\\d*[Ee]\\d*/,\n\n      INTEGERS,\n    ]\n  );\n  const ALPHAS = /&H[0-9A-Fa-f]{2}&/;\n  const COLORS = /&H[0-9A-Fa-f]{3,8}&/;\n\n  /** @type {Mode} */\n  const DECIMAL_TAGS = {\n    begin: [\n      /\\\\/,\n      regex.either(\n        ...[\n          \"(?:xbord|ybord|xshad|yshad|bord|shad|blur|fscx|fscy|fsc)\",\n          \"(?:pbo|frx|fry|frz|fax|fay|fsp|kf|ko|kt|fe|be|fr|fs|K|k)\",\n        ]\n      ),\n      DECIMALS,\n    ],\n    beginScope: {\n      1: \"title.function.invoke\",\n      2: \"title.function.invoke\",\n      3: \"params\",\n    },\n  };\n  /** @type {Mode} */\n  const INTEGER_TAGS = {\n    begin: /\\\\(an|b|q|a(?!lpha))/,\n    beginScope: \"title.function.invoke\",\n    end: regex.concat(INTEGERS, \"?\"),\n    endScope: \"number\",\n  };\n  /** @type {Mode} */\n  const BOOLEAN_TAGS = {\n    begin: /\\\\(i(?!clip)|s|u)/,\n    beginScope: \"title.function.invoke\",\n    end: /[01]?/,\n    endScope: \"number\",\n  };\n  /** @type {Mode} */\n  const ALPHA_TAGS = {\n    begin: /\\\\(alpha|1a|2a|3a|4a)/,\n    beginScope: \"title.function.invoke\",\n    end: regex.concat(ALPHAS, \"?\"),\n    endScope: \"literal\",\n    relevance: 5,\n  };\n  /** @type {Mode} */\n  const COLOR_TAGS = {\n    begin: /\\\\(1c|2c|3c|4c|c(?!lip))/,\n    beginScope: \"title.function.invoke\",\n    end: regex.concat(COLORS, \"?\"),\n    endScope: \"literal\",\n    relevance: 5,\n  };\n  /** @type {Mode} */\n  const FUNCTION_TAGS = {\n    begin: [/\\\\(move|fade|fad|org|pos)/, /\\(/, /[^\\)]*/, /\\)/],\n    beginScope: {\n      1: \"title.function.invoke\",\n      3: \"literals\",\n    },\n    relevance: 2,\n  };\n  /** @type {Mode} */\n  const STRING_TAGS = {\n    begin: [/\\\\(fn|r)/, /[^\\\\\\}]*/],\n    beginScope: {\n      1: \"title.function.invoke\",\n      2: \"string\",\n    },\n  };\n\n  /** @type {Mode} */\n  const COMMENTS = {\n    variants: [\n      hljs.COMMENT(/^;/, \"$\"),\n      hljs.COMMENT(/^Data:\\s+/, \"$\"), // aegisub extradata\n      hljs.COMMENT(/^Comment:\\s+/, \"$\"),\n      hljs.COMMENT(/^Format:\\s+/, \"$\"),\n      // SSA 3.x comments\n      hljs.COMMENT(/^!: /, \"$\"),\n    ],\n    relevance: 5,\n  };\n\n  /** @type {Mode} */\n  const TRANSFORM_TAGS = {\n    scope: \"string\",\n    begin: [/\\\\t/, /\\(/],\n    beginScope: {\n      1: \"title.function.invoke\",\n    },\n    starts: {\n      end: /\\)/,\n      excludeEnd: true,\n      scope: \"formula\",\n\n      contains: [\n        DECIMAL_TAGS,\n        INTEGER_TAGS,\n        BOOLEAN_TAGS,\n        ALPHA_TAGS,\n        COLOR_TAGS,\n        FUNCTION_TAGS,\n        STRING_TAGS,\n      ],\n    },\n  };\n\n  /** @type {Mode} */\n  const DRAWING_COMMANDS = {\n    begin: [/[mnlbspc]? /, DECIMALS, / /, DECIMALS],\n    beginScope: {\n      1: \"built_in\",\n      2: \"link\",\n      4: \"literal\",\n    },\n  };\n\n  /** @type {Mode} */\n  const CLIP_TAGS = {\n    begin: [/\\\\i?clip/, /\\(/],\n    beginScope: {\n      1: \"built_in\",\n    },\n    starts: {\n      end: /\\)|$/,\n      contains: [\n        // vector version\n        DRAWING_COMMANDS,\n        // rect version\n        {\n          match: DECIMALS,\n          scope: \"number\",\n        },\n      ],\n    },\n    relevance: 5,\n  };\n\n  /** @type {Mode} */\n  const DRAWING_MODE = {\n    begin: /\\\\p[1-4]/,\n    beginScope: \"built_in\",\n    starts: {\n      end: /\\\\p0\\}?|$/,\n      endsParent: true,\n      contains: [\n        DRAWING_COMMANDS,\n        // these aren't _actually_ part of the \\p1 tag\n        // but for parsing ease we'll just repeat them\n        CLIP_TAGS,\n        DECIMAL_TAGS,\n        INTEGER_TAGS,\n        BOOLEAN_TAGS,\n        ALPHA_TAGS,\n        COLOR_TAGS,\n        FUNCTION_TAGS,\n        STRING_TAGS,\n      ],\n    },\n  };\n\n  /** @type {Mode} */\n  const BRACE_GROUP = {\n    scope: \"comment\",\n    begin: /\\{/,\n    end: /\\}/,\n    contains: [\n      CLIP_TAGS,\n      DECIMAL_TAGS,\n      INTEGER_TAGS,\n      BOOLEAN_TAGS,\n      ALPHA_TAGS,\n      COLOR_TAGS,\n      FUNCTION_TAGS,\n      STRING_TAGS,\n      // Special cases\n      TRANSFORM_TAGS,\n      DRAWING_MODE,\n    ],\n    relevance: 0,\n  };\n\n  /** @type {Mode} */\n  const SECTION_HEADER = {\n    scope: \"section\",\n    begin: /^\\[/,\n    end: /\\]/,\n    relevance: 0,\n  };\n\n  // \\n, \\N, and \\h\n  /** @type {Mode} */\n  const SIMPLE_ESCAPE_CHAR = {\n    match: /\\\\[nNh]/,\n    scope: \"literal\",\n    relevance: 0,\n  };\n\n  /**\n   * Modern ASS or SSA 4.x dialogue\n   * @type {Mode}\n   **/\n  const DIALOGUE = {\n    begin: [\n      /^Dialogue/, // Key\n      /:[\\t ]/, // Strictly singular space or tab for performance\n      /\\d{0,3}/, // Layer in ASS and SSA 4\n      /,/,\n      /[:\\d.]+/, // Start\n      /,/,\n      /[:\\d.]+/, // End\n      /,/,\n      /[^,\\r\\n]+/, // Style\n      /,/,\n      /[^,\\r\\n]*/, // Actor\n      /,/,\n      // Limit to 4 digits as that was what Sub Station generated\n      /\\d{0,4}/, // MarginL\n      /,/,\n      /\\d{0,4}/, // MarginR\n      /,/,\n      /\\d{0,4}/, // MarginV\n      /,/,\n      /[^,\\r\\n]*/, // Effect\n      /,/,\n    ],\n    beginScope: {\n      1: \"built_in\", // Key\n      2: \"comment\",\n      3: \"number\", // Layer\n      4: \"comment\",\n      5: \"literal\", // Start\n      6: \"comment\",\n      7: \"title.class\", // End\n      8: \"comment\",\n      9: \"variable.constant\", // Style\n      10: \"comment\",\n      11: \"variable\", // Actor Name\n      12: \"comment\",\n      13: \"comment\", // MarginL\n      14: \"comment\",\n      15: \"comment\", // MarginR\n      16: \"comment\",\n      17: \"comment\", // MarginV\n      18: \"comment\",\n      19: \"comment\", // Effect\n      20: \"comment\",\n    },\n    starts: {\n      end: /$/,\n      contains: [SIMPLE_ESCAPE_CHAR, BRACE_GROUP],\n    },\n    relevance: 10,\n  };\n\n  /** @type {Mode} */\n  const SSA_2_OR_3_DIALOGUE = {\n    begin: [\n      /^Dialogue/, // Key\n      /:[\\t ]/, // Strictly singular space or tab for performance\n      /Marked=\\d/, // Layer in ASS\n      /,/,\n      /[:\\d.]+/, // Start\n      /,/,\n      /[:\\d.]+/, // End\n      /,/,\n      /[^,\\r\\n]+/, // Style\n      /,/,\n      /[^,\\r\\n]*/, // Actor\n      /,/,\n      /\\d{4}/, // MarginL\n      /,/,\n      /\\d{4}/, // MarginR\n      /,/,\n      /\\d{4}/, // MarginV\n      /,/,\n      // Effect is stricter in SSA 2 and 3\n      // as other authoring tools were not in much use\n      /(![Ee]ffect|[Kk]araoke|[Ss]croll ?[Uu]p|)/,\n      /,/,\n    ],\n    beginScope: {\n      1: \"built_in\", // Key\n      2: \"comment\",\n      3: \"number\", // Layer\n      4: \"comment\",\n      5: \"literal\", // Start\n      6: \"comment\",\n      7: \"title.class\", // End\n      8: \"comment\",\n      9: \"variable.constant\", // Style\n      10: \"comment\",\n      11: \"variable\", // Actor Name\n      12: \"comment\",\n      13: \"comment\", // MarginL\n      14: \"comment\",\n      15: \"comment\", // MarginR\n      16: \"comment\",\n      17: \"comment\", // MarginV\n      18: \"comment\",\n      19: \"built_in\", // Effect\n      20: \"comment\",\n    },\n    starts: {\n      end: /$/,\n      contains: [SIMPLE_ESCAPE_CHAR, BRACE_GROUP],\n    },\n    relevance: 10,\n  };\n\n  /**\n   * \\C1, \\C3 - \\C7 tags seen in SSA 1 scripts\n   * Also \\CF\n   * @type {Mode}\n   */\n  const SSA_1_COLOR = {\n    begin: /\\\\C/,\n    end: /[\\dF]/,\n    beginScope: \"title.function.invoke\",\n    endScope: \"title.function.invoke\",\n  };\n\n  /**\n   * \\F1 and \\F2 tags seen in SSA 1 scripts\n   * @type {Mode}\n   */\n  const SSA_1_F_TAG = {\n    begin: /\\\\F/,\n    end: /[12]/,\n    beginScope: \"title.function.invoke\",\n    endScope: \"title.function.invoke\",\n  };\n\n  /**\n   * \\I tags seen in SSA 1 scripts\n   * @type {Mode}\n   */\n  const SSA_1_ITALICS = {\n    begin: /\\\\I/,\n    beginScope: \"title.function.invoke\",\n  };\n\n  /** @type {Mode} */\n  const SSA_1_DIALOGUE = {\n    begin: [\n      /^Dialogue/, // Key\n      /:[\\t ]/, // Strictly singular space or tab for performance\n      /Marked=\\d/, // Marked in SSA 1.x\n      /,/,\n      /[:\\d.]+/, // Start\n      /,/,\n      /[:\\d.]+/, // End\n      /,/,\n      /[^,\\r\\n]+/, // Style\n      /,/,\n      /[^,\\r\\n]*/, // Actor\n      /,/,\n      /\\d+/, // MarginL\n      /,/,\n      /\\d+/, // MarginR\n      /,/,\n      /\\d+/, // MarginV\n      /,(?!!Effect,)/,\n      // No effect field, it was added in v2+\n    ],\n    beginScope: {\n      1: \"built_in\", // Key\n      2: \"comment\",\n      3: \"number\", // Layer\n      4: \"comment\",\n      5: \"literal\", // Start\n      6: \"comment\",\n      7: \"title.class\", // End\n      8: \"comment\",\n      9: \"variable.constant\", // Style\n      10: \"comment\",\n      11: \"variable\", // Actor Name\n      12: \"comment\",\n      13: \"comment\", // MarginL\n      14: \"comment\",\n      15: \"comment\", // MarginR\n      16: \"comment\",\n      17: \"comment\", // MarginV\n      18: \"comment\",\n    },\n    starts: {\n      end: /$/,\n      contains: [\n        SIMPLE_ESCAPE_CHAR,\n        SSA_1_COLOR,\n        SSA_1_F_TAG,\n        SSA_1_ITALICS,\n        BRACE_GROUP,\n      ],\n    },\n    relevance: 10,\n  };\n\n  /** @type {Mode} */\n  const STYLE_DEFINITION = {\n    begin: [\n      /^Style/, // Key\n      /:[\\t ]/, // Strictly singular space or tab for performance\n      /[^,\\r\\n]+/, // Name\n      /,/,\n      /[^,\\r\\n]+/, // Font Name\n      /,/,\n      /\\d{1,8}/, // Font Size\n      /,/,\n      // Colors are hex in ASS and signed ints in SSA\n      /(&H[0-9A-Fa-f]{2,8}&?|-?\\d+)/, // Primary Color\n      /,/,\n      /(&H[0-9A-Fa-f]{2,8}&?|-?\\d+)/, // Secondary Color\n      /,/,\n      /(&H[0-9A-Fa-f]{2,8}&?|-?\\d+)/, // Outline Color\n      /,/,\n      /(&H[0-9A-Fa-f]{2,8}&?|-?\\d+)/, // Background Color\n      /,/,\n      // We don't care about:\n      // Bold, Italic, Underline, Strikethrough, ScaleX, ScaleY, Spacing\n      // Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR\n      // MarginV, Encoding\n      /[\\d+,.-]+$/, // Allow negative and decimal values\n    ],\n    beginScope: {\n      1: \"attr\", // Key\n      2: \"comment\",\n      3: \"title.class\", // Name\n      4: \"comment\",\n      5: \"title.class\", // Font Name\n      6: \"comment\",\n      7: \"number\", // Font Size\n      8: \"comment\",\n      9: \"literal\", // Primary Color\n      10: \"comment\",\n      11: \"literal\", // Secondary Color\n      12: \"comment\",\n      13: \"literal\", // Outline Color\n      14: \"comment\",\n      15: \"literal\", // Background Color\n      16: \"comment\",\n      // We don't care about:\n      // Bold, Italic, Underline, Strikethrough, ScaleX, ScaleY, Spacing\n      // Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR\n      // MarginV, Encoding\n      17: \"comment\",\n    },\n    relevance: 10,\n  };\n\n  // A simple key begins with an alphabet at the start of the line\n  // ...followed by any number of alphabetical letters or spaces\n  // ...ending with a colon followed immediately by a space, tab or newline.\n  // EXCEPT Dialogue, Style, Format, Comment, or Data lines\n  /** @type {Mode} */\n  const SIMPLE_KEY_VALUE = {\n    begin: [\n      /^(?!Dialogue|Style|Format|Comment|Data)[A-Za-z][A-Za-z \\t]*/,\n      /:[\\t ]*/,\n    ],\n    beginScope: {\n      1: \"attr\",\n    },\n    starts: {\n      scope: \"string\",\n      end: /$/,\n    },\n    relevance: 0,\n  };\n\n  return {\n    name: \"Advanced SubStation Alpha\",\n    aliases: [\"ssa\"],\n    case_insensitive: false,\n    contains: [\n      // Partial ASS tags\n      BRACE_GROUP,\n      SIMPLE_ESCAPE_CHAR,\n      // completely defined ASS-files\n      SECTION_HEADER,\n      COMMENTS,\n      SIMPLE_KEY_VALUE,\n      DIALOGUE,\n      SSA_2_OR_3_DIALOGUE,\n      SSA_1_DIALOGUE,\n      STYLE_DEFINITION,\n    ],\n  };\n}\n","import ass from \"./languages/ass.js\";\n\nhljs.registerLanguage(\"ass\", ass);\n"],"mappings":"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"}